# Override the default helm chart name
nameOverride: &nameOverride "slashtec-app"
# Override the default helm chart full name
fullnameOverride: &fullnameOverride "slashtec-app"
# Specify the cluster name
cluster: &cluster "ghadeer"
# Specify the environment name (production, staging, prodelopment, etc.)
environment: &environment "dev"
# Labels to attach to all Kubernetes resources created by this chart
commonLabels:
  app_name: *nameOverride
  app_env: *environment
  app: *nameOverride
selectorLabels:
  app_name: task-test-app
# Configuration for the service account
serviceAccount:
  create: true
  annotations: {}
  name: *nameOverride
  multiServiceAccounts:
    enabled: false
    # Example of multiple service accounts
    # names:
    #   - example-service-account
# Deployment configuration
deployment:
  enabled: true
  replicaCount: 1
  revisionHistoryLimit: 3
  imagePullSecrets: []
  image:
    repository: 727245885999.dkr.ecr.ap-south-1.amazonaws.com/ghadeerecr
    pullPolicy: Always
    tag: "dev-13"
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 15
    failureThreshold: 3
    timeoutSeconds: 30
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 5
    periodSeconds: 5
    failureThreshold: 1
    timeoutSeconds: 10
  startupProbe: {}
  podAnnotations: {}
  serviceDefault:
    enabled: false
  serviceIntention:
    enabled: false
  podSecurityContext: {}
  securityContext: {}
  resources:
    requests:
      memory: 64Mi
      cpu: 10m
    limits:
      memory: 128Mi
      cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumes: []
StatefulSet:
  enabled: false
cronjobs:
  enabled: false
  jobs:
    - name: "test-tast-slash"
      type: "externalSecret"
      envFrom: "externalSecret"
      env:
        SPRING_CONFIG_LOCATION: "/app/config/"
      image:
        repository: 518962303326.dkr.ecr.ap-south-1.amazonaws.com/mp-ordermanagement-service
        pullPolicy: Always
        tag: "nonprod-289-test"
      volumeMounts:
        - mountPath: "/app/config"
          name: "application-config"
      restartPolicy: OnFailure
      schedule: "* * * * *"
      podAnnotations:
        sidecar.istio.io/inject: "false"
      command:
        - "java"
        - "-jar"
        - "-Dserver.port=9003"
        - "/app/myapp.jar"
        - "UpdateOrders"
      volumes:
        - name: "application-config"
          configMap:
            name: "mp-ordermanagement-service-configmap"
    - name: "update-orders-cron-2"
      type: "externalSecret"
      envFrom: "externalSecret"
      env:
        SPRING_CONFIG_LOCATION: "/app/config/"
      image:
        repository: 518962303326.dkr.ecr.ap-south-1.amazonaws.com/mp-ordermanagement-service
        pullPolicy: Always
        tag: "nonprod-289-test"
      volumeMounts:
        - mountPath: "/app/config"
          name: "application-config"
      restartPolicy: OnFailure
      schedule: "* * * * *"
      podAnnotations:
        sidecar.istio.io/inject: "false"
      command:
        - "java"
        - "-jar"
        - "-Dserver.port=9003"
        - "/app/myapp.jar"
        - "UpdateOrders"
      volumes:
        - name: "application-config"
          configMap:
            name: "mp-ordermanagement-service-configmap"
# ConfigMap configuration
configMap:
  config:
    suffix: config
    data:
      App: *nameOverride
      Description: Generic description
service:
  enabled: true
  type: ClusterIP
  name: *nameOverride
  port:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http-web
  multiServices:
    enabled: false
# Ingress configuration
ingress:
  enabled: false
  className: nginx
  secretName: "tls-secret"
  hosts:
    - host: slashtecapp-public.cloud
      http:
        paths:
          - backend:
              service:
                name: *nameOverride
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
    - host: slashtecapp-internal.cloud
      http:
        paths:
          - backend:
              service:
                name: *nameOverride
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
  tls:
    enabled: false
# ExternalSecret configuration
externalSecret:
  enabled: false
  suffix: secret
  kind: ClusterSecretStore
  secretStore: drone-secret-store
  secretPath: /path/to/external/secret
serviceMonitor:
  enabled: false
podMonitor:
  enabled: false
volumes:
  enabled: false
# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUScaling: 80
  targetMemScaling: 80
  customTargets: []
  scaleTarget: {}
  # Example of Autoscaling configuration
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
# Database migration configuration
goDBMigration:
  enabled: false
rustDBMigration:
  enabled: false
runCommandsBeforeDeploy:
  enabled: false
  backoffLimit: 3 # Number of retries before considering the job failed
  command: ["/bin/bash"]
  args:
    - -c
    - cd /var/www/html && /usr/local/bin/php /var/www/html/artisan migrate --force && /usr/local/bin/php /var/www/html/artisan storage:link
# Example of Database migration configuration
# replicaCount: 1
# imagePullSecrets:
#   - name: example-image-pull-secret
# image:
#   repository: example-repository
#   pullPolicy: IfNotPresent
#   tag: example-ta:wqg
# livenessProbe: {}
# readinessProbe: {}
# startupProbe: {}
# podAnnotations: {}
# podSecurityContext: {}
# securityContext: {}
# resources: 
#   requests:
#     memory: example-memory-request
#     cpu: example-cpu-request
#   limits:
#     memory: example-memory-limit
#     cpu: example-cpu-limit
# nodeSelector: {}
# tolerations: []
# affinity: {}
# envFrom:
#   - type: configmap
#     suffix: example-configmap
